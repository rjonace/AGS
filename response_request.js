{ _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: false,
     reading: false,
     calledRead: true,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _maxListeners: 10,
  socket: 
   { _connecting: false,
     _handle: 
      { fd: 20,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 396,
     _bytesDispatched: 216,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 1,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 809,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1421702828191,
        _monotonicStartTime: 201065295 },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1421702828191,
     _monotonicStartTime: 201065295,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: null },
  connection: 
   { _connecting: false,
     _handle: 
      { fd: 20,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 396,
     _bytesDispatched: 216,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 1,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 809,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1421702828191,
        _monotonicStartTime: 201065295 },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1421702828191,
     _monotonicStartTime: 201065295,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: null },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36',
     dnt: '1',
     'accept-encoding': 'gzip, deflate, sdch',
     'accept-language': 'en-US,en;q=0.8' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/formData/',
  method: 'GET',
  statusCode: null,
  client: 
   { _connecting: false,
     _handle: 
      { fd: 20,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     bytesRead: 396,
     _bytesDispatched: 216,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 1,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 809,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1421702828191,
        _monotonicStartTime: 201065295 },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1421702828191,
     _monotonicStartTime: 201065295,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: null },
  _consuming: true,
  _dumped: true,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/formData/',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/formData/',
     path: '/formData/',
     href: '/formData/' },
  query: {},
  app: 
   { [Function: app]
     use: [Function],
     handle: [Function],
     listen: [Function],
     setMaxListeners: [Function: setMaxListeners],
     emit: [Function: emit],
     addListener: [Function: addListener],
     on: [Function: addListener],
     once: [Function: once],
     removeListener: [Function: removeListener],
     removeAllListeners: [Function: removeAllListeners],
     listeners: [Function: listeners],
     route: '/',
     stack: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     init: [Function],
     defaultConfiguration: [Function],
     engine: [Function],
     param: [Function],
     set: [Function],
     path: [Function],
     enabled: [Function],
     disabled: [Function],
     enable: [Function],
     disable: [Function],
     configure: [Function],
     get: [Function],
     post: [Function],
     put: [Function],
     head: [Function],
     delete: [Function],
     options: [Function],
     trace: [Function],
     copy: [Function],
     lock: [Function],
     mkcol: [Function],
     move: [Function],
     propfind: [Function],
     proppatch: [Function],
     unlock: [Function],
     report: [Function],
     mkactivity: [Function],
     checkout: [Function],
     merge: [Function],
     'm-search': [Function],
     notify: [Function],
     subscribe: [Function],
     unsubscribe: [Function],
     patch: [Function],
     all: [Function],
     del: [Function],
     render: [Function],
     request: {},
     response: {},
     cache: {},
     settings: 
      { 'x-powered-by': true,
        env: 'development',
        'subdomain offset': 2,
        view: [Function: View],
        views: '/webapp/views',
        'jsonp callback name': 'callback',
        'json spaces': 2 },
     engines: {},
     _events: { mount: [Function] },
     _router: 
      { map: [Object],
        params: {},
        _params: [],
        caseSensitive: false,
        strict: false,
        middleware: [Function: router] },
     routes: 
      { get: [Object],
        post: [Object],
        put: [Object],
        head: [Object],
        delete: [Object],
        options: [Object],
        trace: [Object],
        copy: [Object],
        lock: [Object],
        mkcol: [Object],
        move: [Object],
        propfind: [Object],
        proppatch: [Object],
        unlock: [Object],
        report: [Object],
        mkactivity: [Object],
        checkout: [Object],
        merge: [Object],
        'm-search': [Object],
        notify: [Object],
        subscribe: [Object],
        unsubscribe: [Object],
        patch: [Object] },
     router: [Getter],
     locals: { [Function: locals] settings: [Object] },
     _usedRouter: true },
  res: 
   { domain: null,
     _events: { finish: [Function] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: true,
     _header: 'HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 53\r\nDate: Mon, 19 Jan 2015 21:27:08 GMT\r\nConnection: keep-alive\r\n\r\n',
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: null,
     connection: null,
     app: 
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function: setMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        once: [Function: once],
        removeListener: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: {},
        response: {},
        cache: {},
        settings: [Object],
        engines: {},
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        _usedRouter: true },
     _headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '53' },
     _headerNames: 
      { 'x-powered-by': 'X-Powered-By',
        'content-type': 'Content-Type',
        'content-length': 'Content-Length' },
     req: [Circular],
     locals: [Function: locals],
     charset: 'utf-8',
     _emittedHeader: true,
     statusCode: 200 },
  next: [Function: next],
  body: {},
  files: {},
  originalMethod: 'GET',
  _route_index: 1,
  route: 
   { path: '/formData/',
     method: 'get',
     callbacks: [ [Function] ],
     keys: [],
     regexp: /^\/formData\/\/?$/i,
     params: [] },
  params: [],
  read: [Function] }










  
{ domain: null,
  _events: { finish: [Function] },
  _maxListeners: 10,
  output: [],
  outputEncodings: [],
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _headerSent: true,
  _header: 'HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 53\r\nDate: Mon, 19 Jan 2015 21:27:08 GMT\r\nConnection: keep-alive\r\n\r\n',
  _hasBody: true,
  _trailer: '',
  finished: true,
  _hangupClose: false,
  socket: null,
  connection: null,
  app: 
   { [Function: app]
     use: [Function],
     handle: [Function],
     listen: [Function],
     setMaxListeners: [Function: setMaxListeners],
     emit: [Function: emit],
     addListener: [Function: addListener],
     on: [Function: addListener],
     once: [Function: once],
     removeListener: [Function: removeListener],
     removeAllListeners: [Function: removeAllListeners],
     listeners: [Function: listeners],
     route: '/',
     stack: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     init: [Function],
     defaultConfiguration: [Function],
     engine: [Function],
     param: [Function],
     set: [Function],
     path: [Function],
     enabled: [Function],
     disabled: [Function],
     enable: [Function],
     disable: [Function],
     configure: [Function],
     get: [Function],
     post: [Function],
     put: [Function],
     head: [Function],
     delete: [Function],
     options: [Function],
     trace: [Function],
     copy: [Function],
     lock: [Function],
     mkcol: [Function],
     move: [Function],
     propfind: [Function],
     proppatch: [Function],
     unlock: [Function],
     report: [Function],
     mkactivity: [Function],
     checkout: [Function],
     merge: [Function],
     'm-search': [Function],
     notify: [Function],
     subscribe: [Function],
     unsubscribe: [Function],
     patch: [Function],
     all: [Function],
     del: [Function],
     render: [Function],
     request: {},
     response: {},
     cache: {},
     settings: 
      { 'x-powered-by': true,
        env: 'development',
        'subdomain offset': 2,
        view: [Function: View],
        views: '/webapp/views',
        'jsonp callback name': 'callback',
        'json spaces': 2 },
     engines: {},
     _events: { mount: [Function] },
     _router: 
      { map: [Object],
        params: {},
        _params: [],
        caseSensitive: false,
        strict: false,
        middleware: [Function: router] },
     routes: 
      { get: [Object],
        post: [Object],
        put: [Object],
        head: [Object],
        delete: [Object],
        options: [Object],
        trace: [Object],
        copy: [Object],
        lock: [Object],
        mkcol: [Object],
        move: [Object],
        propfind: [Object],
        proppatch: [Object],
        unlock: [Object],
        report: [Object],
        mkactivity: [Object],
        checkout: [Object],
        merge: [Object],
        'm-search': [Object],
        notify: [Object],
        subscribe: [Object],
        unsubscribe: [Object],
        patch: [Object] },
     router: [Getter],
     locals: { [Function: locals] settings: [Object] },
     _usedRouter: true },
  _headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '53' },
  _headerNames: 
   { 'x-powered-by': 'X-Powered-By',
     'content-type': 'Content-Type',
     'content-length': 'Content-Length' },
  req: 
   { _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: true,
        endEmitted: false,
        reading: false,
        calledRead: true,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: {},
     _maxListeners: 10,
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 396,
        _bytesDispatched: 216,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1421702828191,
        _monotonicStartTime: 201065295,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null },
     connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 396,
        _bytesDispatched: 216,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1421702828191,
        _monotonicStartTime: 201065295,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null },
     httpVersion: '1.1',
     complete: true,
     headers: 
      { host: 'localhost:3000',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36',
        dnt: '1',
        'accept-encoding': 'gzip, deflate, sdch',
        'accept-language': 'en-US,en;q=0.8' },
     trailers: {},
     _pendings: [],
     _pendingIndex: 0,
     url: '/formData/',
     method: 'GET',
     statusCode: null,
     client: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        bytesRead: 396,
        _bytesDispatched: 216,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1421702828191,
        _monotonicStartTime: 201065295,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null },
     _consuming: true,
     _dumped: true,
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     upgrade: false,
     originalUrl: '/formData/',
     _parsedUrl: 
      { protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/formData/',
        path: '/formData/',
        href: '/formData/' },
     query: {},
     app: 
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function: setMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        once: [Function: once],
        removeListener: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: {},
        response: {},
        cache: {},
        settings: [Object],
        engines: {},
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        _usedRouter: true },
     res: [Circular],
     next: [Function: next],
     body: {},
     files: {},
     originalMethod: 'GET',
     _route_index: 1,
     route: 
      { path: '/formData/',
        method: 'get',
        callbacks: [Object],
        keys: [],
        regexp: /^\/formData\/\/?$/i,
        params: [] },
     params: [],
     read: [Function] },
  locals: [Function: locals],
  charset: 'utf-8',
  _emittedHeader: true,
  statusCode: 200 }